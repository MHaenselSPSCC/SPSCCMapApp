{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/completed/completed.component.css","webpack:///./src/app/completed/completed.component.html","webpack:///./src/app/completed/completed.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/main-nav/locate-me/locate-me.component.css","webpack:///./src/app/main-nav/locate-me/locate-me.component.html","webpack:///./src/app/main-nav/locate-me/locate-me.component.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/my-map/my-map.component.css","webpack:///./src/app/my-map/my-map.component.html","webpack:///./src/app/my-map/my-map.component.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-home></app-home>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\nimport { MyMapComponent } from './my-map/my-map.component';\nimport { HomeComponent } from './home/home.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TaskComponent } from './task/task.component';\nimport { CompletedComponent } from './completed/completed.component';\nimport { LocateMeComponent } from './main-nav/locate-me/locate-me.component';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCardModule} from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nconst appRoutes: Routes = [\n  { path: '', component: MyMapComponent },\n  { path: 'task', component: TaskComponent },\n  { path: 'completed', component: CompletedComponent },\n  { path: 'settings', component: SettingsComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    MyMapComponent,\n    HomeComponent,\n    SettingsComponent,\n    TaskComponent,\n    CompletedComponent,\n    LocateMeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    MatSelectModule,\n    MatCardModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  completed works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-completed',\n  templateUrl: './completed.component.html',\n  styleUrls: ['./completed.component.css']\n})\nexport class CompletedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<app-main-nav>\\n  <!--<router-outlet></router-outlet>-->\\n  <app-my-map></app-my-map>\\n</app-main-nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  locate-me works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-locate-me',\n  templateUrl: './locate-me.component.html',\n  styleUrls: ['./locate-me.component.css']\n})\nexport class LocateMeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\\n.ic-name{\\n  margin: 2%;\\n}\\n\\n.right{\\n  flex: 1 1 auto;\\n}\\n\\na, button:focus{\\n  text-decoration: none;\\n  outline: none;\\n}\\n\\n/*\\n@media (min-width: 768px){\\n  .sidenav {\\n    display: none;\\n  }\\n\\n}\\n*/\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"false\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item  routerLinkActive=\\\"router-link-active\\\" ><mat-icon color=\\\"primary\\\">home</mat-icon><span class=\\\"ic-name\\\">Home</span></a>\\n      <a mat-list-item [routerLink]=\\\"['/task']\\\" routerLinkActive=\\\"router-link-active\\\" ><mat-icon color=\\\"primary\\\">assignment</mat-icon><span class=\\\"ic-name\\\">Tasks</span></a>\\n      <a mat-list-item [routerLink]=\\\"['/completed']\\\" routerLinkActive=\\\"router-link-active\\\" ><mat-icon color=\\\"primary\\\">assignment_turned_in</mat-icon><span class=\\\"ic-name\\\">Tasks Completed</span></a>\\n      <a mat-list-item [routerLink]=\\\"['/settings']\\\" routerLinkActive=\\\"router-link-active\\\" ><mat-icon color=\\\"primary\\\">settings</mat-icon><span class=\\\"ic-name\\\">Settings</span></a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>spsccMap</span>\\n      <span class=\\\"right\\\"></span>\\n      <button onclick=\\\"checkDisplacement()\\\" mat-icon-button>\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">my_location</mat-icon>\\n      </button>\\n\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <ng-content>\\n    </ng-content>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  }\n","module.exports = \"      /* Always set the map height explicitly to define the size of the div\\r\\n       * element that contains the map. */\\r\\n       #map {\\r\\n        height: 420px;\\r\\n      }\\r\\n       mat-tab-group{\\r\\n        height: 470px;\\r\\n      }\\r\\n       /* Optional: Makes the sample page fill the window. */\\r\\n       .ic-name{\\r\\n        margin: 2%;\\r\\n      }\\r\\n       mat-card-title{\\r\\n        text-align: center;\\r\\n      }\\r\\n\"","module.exports = \"\\n\\n\\n  <mat-card>\\n      <mat-card-title>Welcome to South Puget Sound CC</mat-card-title>\\n      <mat-card-content>\\n          <mat-tab-group mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\n              <mat-tab >\\n                  <ng-template mat-tab-label>\\n                    <mat-icon color=\\\"primary\\\" theme=\\\"outline\\\">map</mat-icon>\\n                    <span class=\\\"ic-name\\\">Map</span>\\n                  </ng-template>\\n                  <div id=\\\"map\\\"></div>\\n                </mat-tab>\\n              <mat-tab >\\n                <ng-template mat-tab-label>\\n                  <mat-icon color=\\\"primary\\\">assignment</mat-icon>\\n                  <span class=\\\"ic-name\\\">Tasks</span>\\n                </ng-template>\\n              </mat-tab>\\n              <mat-tab >\\n                  <ng-template mat-tab-label>\\n                    <mat-icon color=\\\"primary\\\">assignment_turned_in</mat-icon>\\n                    <span class=\\\"ic-name\\\">Completed</span>\\n                  </ng-template>\\n                </mat-tab>\\n                <mat-tab >\\n                    <ng-template mat-tab-label>\\n                      <mat-icon color=\\\"primary\\\">settings</mat-icon>\\n                      <span class=\\\"ic-name\\\">settings</span>\\n                    </ng-template>\\n                  </mat-tab>\\n            </mat-tab-group>\\n      </mat-card-content>\\n        </mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-map',\n  templateUrl: './my-map.component.html',\n  styleUrls: ['./my-map.component.css']\n})\nexport class MyMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".row{\\r\\n  margin-top:2rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm\\\">\\n        <form>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Change Color Theme\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Theme\\\">\\n                <mat-option *ngFor=\\\"let theme of themes\\\" [value]=\\\"theme.value\\\">\\n                  {{theme.viewValue}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <p> Selected value: {{selectedValue}} </p>\\n          </form>\\n\\n    </div>\\n\\n    <div class=\\\"col-sm\\\">\\n        <form>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Change Color Theme\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"Theme\\\">\\n                <mat-option *ngFor=\\\"let theme of themes\\\" [value]=\\\"theme.value\\\">\\n                  {{theme.viewValue}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <p> Selected value: {{selectedValue}} </p>\\n          </form>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\nexport interface Theme {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent {\n\n  selectedValue: string;\n\n  themes: Theme[] = [\n    {value: 'theme1', viewValue: 'blue'},\n    {value: 'theme2', viewValue: 'yellow'},\n    {value: 'theme3', viewValue: 'white'}\n  ];\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  task works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}